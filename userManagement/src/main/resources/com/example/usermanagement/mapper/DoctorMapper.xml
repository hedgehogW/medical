<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.usermanagement.mapper.DoctorMapper">
  <resultMap id="BaseResultMap" type="com.example.usermanagement.model.Doctor">
    <id column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="doctor_name" jdbcType="VARCHAR" property="doctorName" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="available" jdbcType="BIT" property="available" />
  </resultMap>
  <sql id="Base_Column_List">
    doctor_id, department_id, doctor_name, specialty, available
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from doctor
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.usermanagement.model.Doctor">
    insert into doctor (doctor_id, department_id, doctor_name, 
      specialty, available)
    values (#{doctorId,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT}, #{doctorName,jdbcType=VARCHAR}, 
      #{specialty,jdbcType=VARCHAR}, #{available,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.usermanagement.model.Doctor">
    insert into doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="doctorName != null">
        doctor_name,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="doctorName != null">
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.usermanagement.model.Doctor">
    update doctor
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="doctorName != null">
        doctor_name = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
    </set>
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.usermanagement.model.Doctor">
    update doctor
    set department_id = #{departmentId,jdbcType=BIGINT},
      doctor_name = #{doctorName,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT}
    where doctor_id = #{doctorId,jdbcType=BIGINT}
  </update>
</mapper>